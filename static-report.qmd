---
title: "Static Analysis Report"
subtitle: "Bayesian Analysis of Clinical Trial Results"
author: "Your Name"
date: today
format: 
  html:
    toc-depth: 3
bibliography: bibliography.bib
execute:
  echo: true
  warning: false
---

```{r setup}
#| include: false
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(knitr)
library(kableExtra)
library(gridExtra)

# Set seed for reproducibility
set.seed(42)
```

## Introduction

This report presents a Bayesian analysis of data from a clinical trial comparing Treatment X with standard care for Condition Y. The primary analysis focuses on the difference in mean outcome scores between treatment and control groups, accounting for patient characteristics.

## Methods

### Study Design

The study randomized patients with Condition Y to receive either Treatment X or standard care. Primary and secondary outcomes were measured at baseline, 6 weeks, and 12 weeks.

### Statistical Analysis

We used Bayesian hierarchical models to estimate treatment effects while accounting for baseline characteristics:

-   Primary outcome was modeled using a normal likelihood with treatment, age, and sex as predictors
-   Secondary outcome was modeled with similar structure
-   Weakly informative priors were used for all parameters

## Data Overview

```{r load-data}
# Read the data
trial_data <- read.csv("data/trial_data.csv")

# Generate some dummy biomarker data
n_patients <- nrow(trial_data)
timepoints <- c("Baseline", "Week 6", "Week 12")
patient_ids <- rep(trial_data$patient_id, each = 3)
times <- rep(timepoints, n_patients)
treatment <- rep(trial_data$treatment, each = 3)

# Generate biomarker values with treatment effect increasing over time
baseline <- rnorm(n_patients, mean = 50, sd = 10)
baseline <- rep(baseline, each = 3)

# Add time effect and treatment interaction
time_effect <- rep(c(0, 5, 8), n_patients)
treatment_effect <- ifelse(treatment == "Treatment", 
                          rep(c(0, 4, 7), n_patients/2), 
                          rep(c(0, 0, 0), n_patients/2))

biomarker <- baseline + time_effect + treatment_effect + rnorm(length(baseline), 0, 5)

biomarker_data <- data.frame(
  patient_id = patient_ids,
  treatment = treatment,
  timepoint = times,
  biomarker_value = biomarker
)

# Save for later use
write.csv(biomarker_data, "data/biomarker_data.csv", row.names = FALSE)

# Display sample of the data
kable(head(trial_data, 10), caption = "Sample of Trial Data") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
```

## Primary Outcome Analysis

```{r primary-model}
# Fit Bayesian linear model
primary_model <- stan_glm(
  primary_outcome ~ treatment + age + sex,
  data = trial_data,
  family = gaussian(),
  prior = normal(0, 2.5),
  prior_intercept = normal(5, 5),
  seed = 123,
  chains = 2, # Using fewer chains for speed
  iter = 1000 # Fewer iterations for speed
)

# Summary of model results
primary_summary <- summary(primary_model)
```

```{r primary-plot, fig.height=5, fig.width=10}
# Plot treatment effect posterior
mcmc_areas(as.matrix(primary_model), 
           pars = c("treatmentTreatment"),
           prob = 0.95) +
  labs(title = "Posterior Distribution of Treatment Effect (Primary Outcome)",
       subtitle = "95% Credible Interval")

# Plot full posterior
post <- as.data.frame(primary_model)
treatment_effect <- post$treatmentTreatment

# Calculate probability of positive effect
prob_positive <- mean(treatment_effect > 0)
prob_clinically_significant <- mean(treatment_effect > 1)

# Plot posterior with clinical significance threshold
ggplot(data.frame(x = treatment_effect), aes(x = x)) +
  geom_density(fill = "steelblue", alpha = 0.7) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  geom_vline(xintercept = 1, linetype = "dotted", color = "red") +
  annotate("text", x = 2, y = 0.1, 
           label = sprintf("P(Effect > 0) = %.2f\nP(Effect > 1) = %.2f", 
                          prob_positive, prob_clinically_significant)) +
  labs(title = "Treatment Effect Posterior",
       x = "Effect Size",
       y = "Density") +
  theme_minimal()
```

The Bayesian analysis of the primary outcome shows a treatment effect of `r round(mean(treatment_effect), 2)` (95% Credible Interval: \[`r round(quantile(treatment_effect, 0.025), 2)`, `r round(quantile(treatment_effect, 0.975), 2)`\]). The probability that Treatment X is superior to standard care is `r round(prob_positive * 100, 1)`%, and the probability of a clinically significant effect (\>1 point) is `r round(prob_clinically_significant * 100, 1)`%.

## Secondary Outcome Analysis

```{r secondary-model}
# Fit Bayesian linear model for secondary outcome
secondary_model <- stan_glm(
  secondary_outcome ~ treatment + age + sex,
  data = trial_data,
  family = gaussian(),
  prior = normal(0, 2.5),
  prior_intercept = normal(3, 3),
  seed = 456,
  chains = 2,
  iter = 1000
)

# Summary of model results
secondary_summary <- summary(secondary_model)
```

```{r secondary-plots, fig.height=5, fig.width=10}
# Plot treatment effect posterior
mcmc_areas(as.matrix(secondary_model), 
           pars = c("treatmentTreatment"),
           prob = 0.95) +
  labs(title = "Posterior Distribution of Treatment Effect (Secondary Outcome)",
       subtitle = "95% Credible Interval")
```

## Biomarker Analysis

```{r biomarker-analysis, fig.height=6, fig.width=10}
# Convert timepoint to factor with correct order
biomarker_data$timepoint <- factor(biomarker_data$timepoint, 
                                 levels = c("Baseline", "Week 6", "Week 12"))

# Calculate means and standard errors
biomarker_summary <- biomarker_data %>%
  group_by(treatment, timepoint) %>%
  summarize(
    mean = mean(biomarker_value),
    se = sd(biomarker_value) / sqrt(n()),
    lower = mean - 1.96 * se,
    upper = mean + 1.96 * se,
    .groups = "drop"
  )

# Plot biomarker trajectory
ggplot(biomarker_summary, aes(x = timepoint, y = mean, color = treatment, group = treatment)) +
  geom_line(size = 1) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
  labs(title = "Biomarker Changes Over Time",
       x = "Time Point",
       y = "Biomarker Level",
       color = "Treatment Group") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 0, hjust = 0.5),
        legend.position = "bottom")
```

## Subgroup Analysis

```{r subgroup-analysis, fig.height=6, fig.width=10}
# Create age groups
trial_data$age_group <- cut(trial_data$age, 
                         breaks = c(0, 60, 70, 100), 
                         labels = c("<60", "60-70", ">70"))

# Calculate mean outcome by age group and treatment
subgroup_data <- trial_data %>%
  group_by(age_group, sex, treatment) %>%
  summarize(
    mean_primary = mean(primary_outcome),
    se_primary = sd(primary_outcome) / sqrt(n()),
    count = n(),
    .groups = "drop"
  )

# Plot subgroup effects
ggplot(subgroup_data, 
      aes(x = age_group, y = mean_primary, fill = treatment)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_errorbar(aes(ymin = mean_primary - se_primary, 
                   ymax = mean_primary + se_primary),
               position = position_dodge(0.9), width = 0.25) +
  facet_wrap(~ sex) +
  labs(title = "Primary Outcome by Age Group, Sex, and Treatment",
       x = "Age Group",
       y = "Mean Primary Outcome",
       fill = "Treatment") +
  theme_minimal()
```

## Conclusions

Based on our Bayesian analysis:

1.  Treatment X demonstrates a clinically meaningful improvement in the primary outcome compared to standard care.
2.  The treatment effect is consistent across age groups and sexes.
3.  Biomarker data shows a clear treatment-related trend over the 12-week period.
4.  The probability that Treatment X provides a clinically significant benefit exceeds 90%.

## References

::: {#refs}
:::

## Appendix: Model Diagnostics

```{r diagnostics, fig.height=5, fig.width=10}
# Check MCMC diagnostics for primary model
mcmc_trace(as.matrix(primary_model), pars = c("treatmentTreatment", "(Intercept)"))

# Posterior predictive check
pp_check(primary_model, nreps = 50) +
  labs(title = "Posterior Predictive Check: Primary Outcome Model")
```